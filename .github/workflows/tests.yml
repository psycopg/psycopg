name: Tests

on:
  push:
  pull_request:

jobs:

  linux:  # {{{
    name: Test on Linux
    runs-on: ubuntu-20.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - {impl: python, python: "3.6", postgres: "postgres:10", libpq: "14"}
          - {impl: python, python: "3.7", postgres: "postgres:11", libpq: null}
          - {impl: python, python: "3.8", postgres: "postgres:12", libpq: null}
          # Don't test two experimental things together
          - {impl: python, python: "3.9", postgres: "postgres:14", libpq: "14"}
          - {impl: python, python: "3.10", postgres: "postgres:13", libpq: null}
          - {impl: c, python: "3.6", postgres: "postgres:14", libpq: null}
          - {impl: c, python: "3.7", postgres: "postgres:13", libpq: "14"}
          - {impl: c, python: "3.8", postgres: "postgres:12", libpq: "14"}
          - {impl: c, python: "3.9", postgres: "postgres:11", libpq: "14"}
          - {impl: c, python: "3.10", postgres: "postgres:10", libpq: null}
          - {impl: dns, python: "3.9", postgres: "postgres:13", libpq: null}
          - {impl: postgis, python: "3.9", postgres: "postgis/postgis:13-master", libpq: null}

    env:
      PSYCOPG_IMPL: ${{ matrix.impl }}
      PSYCOPG_TEST_DSN: "host=127.0.0.1 user=postgres"
      PGPASSWORD: password

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
        if: ${{ matrix.python != '3.10' }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10.0-alpha - 3.10.0"
        if: ${{ matrix.python == '3.10' }}

      - name: Install libpq 14
        if: ${{ matrix.libpq == '14' }}
        run: |
          echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -c -s)-pgdg main" | sudo tee -a /etc/apt/sources.list.d/pgdg.list
          sudo apt-get -qq update
          sudo apt-get -y install libpq-dev>=14 libpq5>=14

      - name: Install tox
        run: pip install tox

      - name: Run tests (Python implementation)
        run: tox -c psycopg -e ${{ matrix.python }} -- --color yes
        if: ${{ matrix.impl == 'python' }}

      - name: Run tests (C implementation)
        run: tox -c psycopg_c -e ${{ matrix.python }} -- --color yes
        if: ${{ matrix.impl == 'c' }}
        env:
          # skip tests failing on importing psycopg_c.pq on subprocess
          # they only fail on Travis, work ok locally under tox too.
          PYTEST_ADDOPTS: "-m 'not subprocess'"

      - name: Run DNS-related tests
        run: tox -c psycopg -e dns -- --color yes -m dns
        if: ${{ matrix.impl == 'dns' }}
        env:
          PSYCOPG_IMPL: python

      - name: Run PostGIS-related tests
        run: tox -c psycopg -e postgis -- --color yes -m postgis
        if: ${{ matrix.impl == 'postgis' }}
        env:
          PSYCOPG_IMPL: python

    services:
      postgresql:
        image: ${{ matrix.postgres }}
        env:
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5


  # }}}

  macos:  # {{{
    name: Test on MacOS
    runs-on: macos-10.15

    strategy:
      fail-fast: false
      matrix:
        include:
          - {impl: python, python: "3.6"}
          - {impl: python, python: "3.7"}
          - {impl: python, python: "3.8"}
          - {impl: python, python: "3.9"}
          - {impl: python, python: "3.10"}
          - {impl: c, python: "3.6"}
          - {impl: c, python: "3.7"}
          - {impl: c, python: "3.8"}
          - {impl: c, python: "3.9"}
          - {impl: c, python: "3.10"}

    env:
      PSYCOPG_IMPL: ${{ matrix.impl }}
      PSYCOPG_TEST_DSN: "host=127.0.0.1 user=runner dbname=postgres"
      # MacOS on GitHub Actions seems particularly slow.
      # Don't run timing-based tests as they regularly fail.
      # pproxy-based tests fail too, with the proxy not coming up in 2s.
      PYTEST_ADDOPTS: "-m 'not timing and not proxy'"

    steps:
      - uses: actions/checkout@v2

      - name: Install PostgreSQL on the runner
        run: brew install postgresql@13

      - name: Start PostgreSQL service for test
        run: brew services start postgresql

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
        if: ${{ matrix.python != '3.10' }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10.0-alpha - 3.10.0"
        if: ${{ matrix.python == '3.10' }}

      - name: Install tox
        run: pip install tox

      - name: Run tests (Python implementation)
        run: tox -c psycopg -e ${{ matrix.python }} -- --color yes
        if: ${{ matrix.impl == 'python' }}

      - name: Run tests (C implementation)
        run: tox -c psycopg_c -e ${{ matrix.python }} -- --color yes
        if: ${{ matrix.impl == 'c' }}


  # }}}

  windows:  # {{{
    name: Test on Windows
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        include:
          - {impl: python, python: "3.6"}
          - {impl: python, python: "3.7"}
          - {impl: python, python: "3.8"}
          - {impl: python, python: "3.9"}
          - {impl: python, python: "3.10"}
          - {impl: c, python: "3.6"}
          - {impl: c, python: "3.7"}
          - {impl: c, python: "3.8"}
          - {impl: c, python: "3.9"}
          - {impl: c, python: "3.10"}

    env:
      PSYCOPG_IMPL: ${{ matrix.impl }}
      PSYCOPG_TEST_DSN: "host=127.0.0.1 dbname=postgres"
      # On windows pproxy doesn't seem very happy. Also a few timing test fail.
      PYTEST_ADDOPTS: "-m 'not timing and not proxy'"

    steps:
      - uses: actions/checkout@v2

      - name: Start PostgreSQL service for test
        run: |
          $PgSvc = Get-Service "postgresql*"
          Set-Service $PgSvc.Name -StartupType manual
          $PgSvc.Start()

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
        if: ${{ matrix.python != '3.10' }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10.0-alpha - 3.10.0"
        if: ${{ matrix.python == '3.10' }}

      - name: Install tox
        run: pip install tox wheel

      - name: Run tests (Python implementation)
        if: ${{ matrix.impl == 'python' }}
        run: tox -c psycopg -e ${{ matrix.python }} -- --color yes

      # Build a wheel package of the C extensions.
      # If the wheel is not delocated, import fails with some dll not found
      # (but it won't tell which one).
      - name: Build the C wheel
        if: ${{ matrix.impl == 'c' }}
        run: |
          $env:Path = "C:\Program Files\PostgreSQL\14\bin\;$env:Path"
          python ./psycopg_c/setup.py bdist_wheel
          pip install delvewheel
          &"delvewheel" repair --no-mangle "libiconv-2.dll;libwinpthread-1.dll" @(Get-ChildItem psycopg_c\dist\*.whl)

      # tox will only build the package from sdist, not from wheel, so we can't
      # use it for testing. Just test everything in the global installation.
      - name: Install and run tests (C implementation)
        if: ${{ matrix.impl == 'c' }}
        run: |
          pip install ./psycopg/[test] ./psycopg_pool
          &"pip" install @(Get-ChildItem wheelhouse\*.whl)
          # Fix the path for the tests using ctypes
          $env:Path = "C:\Program Files\PostgreSQL\14\bin\;$env:Path"
          pytest --color yes


  # }}}
